- maps are unordered list.
- Maps are refeences.
- Passed by references.
- Unsafe for concurrency.
map[keyType]valueType // keyType needs to comparable type.

	leagueTitles := make(map[string]int, size) // good practise to specify size for large maps.
	leagueTitles["Sunderland"] = 6
	leagueTitles["Newcastle"] = 4

	recentHead2Head := map[string]int{
		"Sunderland": 5,
		"Newcastle":  0,
	}

	fmt.Printf("\nLeague titles: %v\nRecent head to heads: %v\n", leagueTitles, recentHead2Head)

    testMap := map[string]int{"A": 1, "B": 2, "C": 3, "D": 4, "E": 5}
	for k, v := range testMap {
		fmt.Printf("\nKey is: %v Value is %v", k, v)
	}

    testMap["F"] = 1973
	fmt.Println(testMap)
	delete(testMap, "F")
	fmt.Println(testMap)